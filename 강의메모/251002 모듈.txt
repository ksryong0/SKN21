패키지 : 모듈들이 모여있는 디렉토리
파이썬은 순차적으로 실행됨
함수를 먼저 정의하고 함수를 호출해야함

파이썬 터미널은 저장하고 실행할 것.

같은 패키지(디렉토리)안에 있는 모듈끼리 import할 때는, 패키지 이름은 안써도 됨.
다른 패키지 안에 있으면 패키지 이름을 써야됨.

import my_package.todo_module as todo # my_package.todo_module 이름을 todo로 할게
함수를 import하면 module명을 지정하지 않아도 된다.
#모듈안의 요소를 import할때는 'from 경로 import 함수' 구문으로 해야함

파이썬은 import를 맨 위에 할 필요는 없다. 사용하기 전에만 하면 됨.

pythonpath : import할 모듈을 찾는 곳.
1.표준 모듈(1st party) 2. 현재실행중인 모듈의 경로(2nd party) 3. 3rd party 모듈(추가적으로 설치한 라이브러리들)

import한 모듈의 실행구문을 실행해버림.

pip install 패키지이름
uv : pip 보다 빠름

pipy : 

pip install -r requirements.txt
오류 : 다음 명령을 실행할 수 없는 상태

try 하나에 except 여러개가 올 수 있다.
그냥 except는 다른 except 조건들 맨 밑으로 와야됨

finally를 실행하고 exception을 내버리겠다 할떄 try-finally 구문을 씀. 다른데서 처리하겠다.
-------------------------------------------------
함수 a가 함수 b를 호출하고 함수b가 함수c를 호출하면, c가 끝나고 b가 끝난 후 a가 마지막으로 끝난다.
a->b->c->b->a

return : 처리가 정상적으로 끝났을 때.
raise : exception이 발생했을 때 호출한 곳으로 돌아가라. 너가 시킨 일 이 이유 때문에 못했어.

c에서 exception이 발생하면 c가 처리하는게 아니고 b가 처리.
왜냐? c 함수가 실행되는 시점에는 에러가 날지 안날지 모르니까.
b한테 c는 에러가 난지 안난지 알려줘야됨. 왜냐? b가 c를 부른 후에 그다음 작업을 할지 말지 결정해야 되니까.

return은 처리결과가 들어감.
-------------------------------------------------

데이터(변수)는 스택 구조로 관리됨
