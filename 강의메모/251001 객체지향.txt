같은 클래스를 공유하는 두 객체의 프로퍼티들이 동일해야지 같은 클래스를 쓰는 의미가 있다.
힙 영역에 객체가 저장됨
객체.메소드
객체의 인스턴스나 메소드에 접근할 때 self 이용.
self : 그 객체.

상위(super) class
=Parent class
=base class


derived class
=child class
=하위(sub) class

상위 클래스는 공통적인거. 하위 클래스는 세부적인거. 하위 클래스끼리는 다른게 있음.
sub class는 상위클래스의 공통적인거를 물려받아서 쓰고, 따로 필요한건 추가해서 쓰겠다.
다중 상속 : sub class의 상위클래스는 여러개일 수 있다.

다중 상속시 충돌은 안일어나는지? 이름이 같은거? 문제가 된다. 
MRO(Method Resolution Order) : 파이썬에서는 다중 상속시 메서드를 호출하는 순서를 정해둠. 자기 꺼->부모(왼쪽 부모부터 오른쪽 부모로 찾아감)

단일 상속 : sub class 가 1개의 상위클래스한테만 상속받는 것.

하위클래스 자체에 메서드가 없으면 부모 클래스에 가서 찾아보고 있으면 가져다 씀.

파이썬은 오버라이딩은 없고, 오버로딩이 있음.
##super() : 오버라이딩한 메소드인데 부모의 메소드를 호출하고 싶을 때

isinstance( 10, (int, float) ) #int 또는 float이면 true. 튜플을 'OR' 개념으로 처리함.
하위 클래스의 객체를 상위 클래스로 isinstance를 하면 True가 나옴.

다형성:상속 관계인 경우 부모의 클래스 성질을 가져다 쓸 수 있다?

더블언더스코어(=던더) 메소드.

모듈(py파일)들을 패키지(디렉토리)로 묶음

first party 모듈: 표준모듈
second party 모듈:사용자 정의 모듈
third party 모듈:특정 업체나 개발자들이 만든 모듈. 세컨드가 배포되어 사용되면 third party 모듈이 된다.