사용자 정의 함수는 파이썬 실행환경에 들어가있다가 Runtime중에만 사용됨

함수 선언시 디폴트 값이 없는 파라미터가 앞쪽에 와야되고, 디폴트값이 있는 파라미터는 뒤쪽에 와야 한다.

positional argument : 파라미터가 위치에 맞춰서(순서대로) 들어가는거
keyword argument : 파라미터가 들어갈 곳을 지정해서 들어가는거. 순서 상관 x

positional argument 들을 먼저 호출하고 keyword argument들을 호출하는 것은 가능
keyword argument들을 먼저 호출하고 positional argument들을 호출하는 것을 불가능


def print_info7(id=None, pwd=None, name=None, age=None, tall=None):

선언할 때 None을 한번에 할 수는 없는지?

위치기반 가변인자 * : 여러 개의 가변인자를 튜플로 묶어서 받는다
*를 여러개는 사용 불가.
def test(*args, *name) -> 이런거 불가능.
def test(*args) 요렇게 해야됨

키워드 가변인자 ** : 여러개의 키 밸류 가변인자(딕셔너리)를 갯수 상관없이 딕셔너리로 받아옴

파이썬 특징 : 로컬변수에 그 변수이름이 없으면 전역변수를 가져다 씀

--------------------------------------
def calc(num1, num2, func):
    print("받은값:", num1, num2) # 1번 작업
    result = num1 + num2    #2번 작업 - 계산
    print("계산결과: ",result)  #3번 작업: 계산결과 출력
calc(1,2)

# 세단계 작업중 1,3번은 고정
# 2번 작업->호출하는쪽(caller)이 원하는 연산을 처리
# 처리할 값 num1, num2
# 처리할 함수 : func
--------------------------------------
람다 표현식 : 함수를 연산식으로 만듬. 간단한 함수를 식으로 만든 것

docstring : 함수에 대한 설명, 파라미터에 대한 설명, 반환값에 대한 설명, 발생 가능성 있는 예외(에러)에 대한 설명, 사용 예제

    """다양한 계산을 하는 함수 #함수설명
    Args: #파라미터들 설명
        num1 (int | float): 피연산자 1 #변수명(타입):파라미터 설명
        num2 (int | float): 피연산자 2
        func(callable) : 함수
    
    Returns : #리턴값
        int | float : 계산 결과 #리턴값의 타입 : 설명
    
    Raise : #발생가능성 있는 예외(에러)
        ValueError : 발생 이유  #에러이름(타입) : 발생이유
        
    """

# 타입힌트
# 변수명:타입 = 값
# name: str = None
# name: str | None = None

def calc(num1:int|float, num2:int|float, func:Callable) -> float | int:
# -> 이 화살표는 리턴값의 타입

:(콜론)
파이썬 힌트 문법. 변수 리턴값 다 쓸 수 있음

객체:연관성 있는 변수들과 모듈들을 객체로 묶어서 개발하겠다.

학생	-학번
	-이름
	-반
	-학년
	-학교

이렇게 학생 정보와 메서드를 정의하는걸 클래스라고 함.
인스턴스 : 실제하도록 만들어주는 거
객체(instance)는 변수, 함수를 정의해야함.

class 클래스이름:  #선언부
    #클래스 구현
    #메소드들을 정의

클래스 이름 관례
- 파스칼 표기법 : 첫글자만 대문자. 나머지는 소문자.
Student, HighSchoolStudent

pass : 선언만 하고 지금은 구현하지 않을 때 사용. 실행이 가능함

